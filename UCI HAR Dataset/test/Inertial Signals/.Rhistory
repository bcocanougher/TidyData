load("~/Desktop/RCoursera/getdata-data-DATA.gov_NGAP.xlsx")
mydata <- source("~/Desktop/RCoursera/getdata-data-DATA.gov_NGAP.xlsx")
source("~/Desktop/RCoursera/getdata-data-DATA.gov_NGAP.xlsx")
load("~/Desktop/RCoursera/getdata-data-DATA.gov_NGAP.xlsx")
if (!file.exists("data")){dir.create("data")}
fileURL <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata2FDATA.gov_NGAP.xlsx
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata2FDATA.gov_NGAP.xlsx"
download.file(fileURL, destfile = ".data/gas.xlsx", method="curl")
download.file(fileURL, destfile = "~/Desktop/RCoursera/getdata-data-DATA.gov_NGAP", method="curl")
library(xlsx)
install.packages("xlsx")
library(xlsx)
gasData <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, header=TRUE)
gasData
colIndex <- 7:15
rowIndex <- 18-23
Dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat
Dat
sum(dat$Zip*dat$Ext,na.rm=T)
sum(Dat$Zip*dat$Ext,na.rm=T)
sum(Dat$Zip*Dat$Ext,na.rm=T)
Dat
rowIndex
rowIndex <- 18:23
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl, useInternal=T)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl, useInternal=T)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl, useInternal=T)
doc <- xmlTreeParse(fileUrl)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileURL, desfile = ./data/quiz.csv, method = "curl")
download.file(fileURL, destfile = ./data/quiz.csv, method = "curl")
download.file(fileURL, destfile = "./data/quiz.csv", method = "curl")
read.csv("quiz.csv")
read.csv("data/quiz.csv")
data <- read.csv("data/quiz.csv")
head(data)
data <- fread("data/quiz.csv")
?fread
install.packages(data.table)
install.packages("data.table")
library(data.table)
?fread
data <- fread("data/quiz.csv")
head(data)
DT <- data
hed(DT)
head(DT)
DT[,mean(pwgtp15,by=SEX)]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
?system.time
system.time(mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
names(RNAData)
hist(RNAData$d72F11_1, col = "green")
hist(RNAData$length, col = "green")
class(RNAData$length)
lengthnum <- as.numeric(RNAData$length)
lengthnum
length72F11 <- as.numeric(RNAData$d72F11_1)
hist(length72F11, col = "green")
rug(length72F11)
hist(lengthnum, col = "blue")
rug(lengthnum)
length72F11 <- length72F11>5
hist(length72F11, col = "purple")
head(length72F11)
length72F11 <- as.numeric(RNAData$d72F11_1)
head(length72F11)
bad <- length72F11<5
length72F11[!bad]
72F11above5 <- length72F11[!bad]
BasinsAbove5 <- length72F11[!bad]
hist(BasinsAbove5, col = "green")
rug(BasinsAbove5)
bad <- length72F11<100
BasinsAbove100 <- length72F11[!bad]
hist(BasinsAbove100)
rug(BasinsAbove100)
hist(BasinsAbove100, color = "blue", breaks = 100)
boxplot(BasinsAbove100)
abline(h = 500)
abline(h = median(BasinsAbove100))
boxplot(length72F11 ~ lengthnum, color = "red")
hist(length72F11 ~ lengthnum, color = "red")
plot(length72F11 ~ lengthnum, color = "red")
lengthbasin2 <- as.numeric(RNAData$d72F11_2)
lengthbasin1 <- as.numeric(RNAData$d72F11_1)
plot(lengthbasin1 ~ lengthbasin2)
boxplot(lengthbasin1 ~ lengthbasin2, color = "red")
boxplot(lengthbasin1 ~ lengthbasin1, color = "red")
boxplot(lengthbasin1 ~ lengthbasin1)
boxplot(lengthbasin1 ~ lengthnum)
source('~/Desktop/RCoursera/GetInfoByCG.R')
GetInfoByCG("fru")
GetInfoByCG("fruitless")
GetInfoByCG("elav")
GetInfoByCG("lola")
GetInfoByCG("longitudinals lacking")
library('swirl')
swirl()
5+7
try()
quit()
getwd()
ls
ls()
rm(list=ls())
read.table("household_power_consumption.txt")
household_power_consuption <- read.table("household_power_consumption.txt")
head(household_power_consuption)
str(household_power_consuption)
summary(household_power_consuption)
?read.table
household_power_consuption <- read.table("household_power_consumption.txt", sep = ";")
head(household_power_consuption)
?as.date
?as.Date
as.Date(16/12/2006)
as.Date('16/12/2006')
PowerDateSubset <- household_power_consuption[household_power_consuption$01/02/2007, ]
PowerDateSubset <- household_power_consuption[household_power_consuption$01/02/2007, ]
strptime(16/12/2006)
?strptime
strptime(16/12/2006, format = '%d-%m-%Y')
strptime(16/12/2006, format = %d-%m-%Y)
strptime(16/12/2006, format = "%d-%m-%Y")
strptime("0016-12-20")
strptime(0016-12-20)
houseDate <- as.Date(household_power_consuption[, 1]
)
houseDate <- as.Date(household_power_consuption[household_power_consuption$Date, ]
)
houseDate <- as.Date(household_power_consuption[, household_power_consuption$Date]
)
houseDate <- as.Date(household_power_consuption[, household_power_consuption$Date])
houseDate <- as.Date(16/12/2006)
houseDate <- as.Date('16/12/2006')
houseDate
DateRow <- household_power_consuption[, 1]
head(DateRow)
as.Date(DateRow)
as.string(DateRow)
?as.string
class(DateRow)
as.character(DateRow)
DateRow <- as.character(DateRow)
as.Date(DateRow)
rightDates <- DateRow
rightDates <- DateRow$"02/02/2007"
which(DateRow == "02/02/2007")
?which
which(DateRow <- c("02/02/2007", "02/01/2007"))
match("02/02/2007", DateRow)
head(DateRow)
DateRow
match("02/02/2007", rightDates)
head(rightDates)
match("16/12/2006", rightDates)
match("02/02/2007", rightDates)
match("01/02/2007", rightDates)
tail(rightDates)
rightDates == "02/02/2007"
rightDatesLogical <- rightDates == "02/02/2007"
rightDatesread <- rightDates[rightDatesLogical]
rightDatesread
head(rightDates)
rightDatesLogical <- rightDates == "16/12/2006"
rightDatesread <- rightDates[rightDatesLogical]
righDatesread
rightDatesread
rightDatesLogical <- rightDates == "16/12/2007"
rightDatesLogical
rightDatesread <- rightDates[rightDatesLogical]
rightDatesread
tail(rightDates)
rightDates
rightDates[12000]
rightDates[17000]
rightDates[25000]
rightDatesLogical <- rightDates == "2/2/2007"
rightDatesLogical
rightDatesread <- rightDates[rightDatesLogical]
rightDatesread
PowerDateSubset <- household_power_consuption[household_power_consuption$1/2/2007,]
DateCol <- household_power_consuption[, 1]
head(DateCol)
DateCol <- as.character(DateCol)
head(DateCol)
DatesWanted <- which(DateCol == "2/2/2007"
)
DatesWanted
FirstWanted <- which(DateCol == "1/2/2007"
)
FirstWanted
PowerDateSet <- household_power_consuption[66638:69517, ]
head(PowerDateSet)
tail(PowerDateSet)
names(household_power_consuption)
HouseNames <- household_power_consuption[1, ]
HouseNames
HouseNames <- as.character(HouseNames)
HouseNames
HouseNames <- household_power_consuption[1, ]
class(HouseNames)
as.matrix(HouseNames)
as.vector(HouseNames)
HouseNames <- as.matrix(HouseNames)
HouseNames <- as.vector(HouseNames)
HouseNames
?colname
?namecol
colnames(PowerDateSet, HouseNames)
colnames(HouseNames, PowerDateSet)
?colnames
colnames(PowerDateSet) <- HouseNames
Head(PowerDateSet)
head(PowerDateSet)
?bar
bar(PowerDateSet$Global_active_power)
?plot
hist(PowerDateSet$Global_active_power)
PowerDateSet$Global_active_power
class(PowerDateSet$Global_active_power)
GlobalActivePower <- as.numeric(PowerDateSet$Global_active_power)
hist(GlobalActivePower)
hist(GlobalActivePower, col = "red")
?title
title(main = "Global Active Power", xlab = "Global Active Power (kilowatts"))
title(main = "Global Active Power", xlab = "Global Active Power (kilowatts")
hist(GlobalActivePower, col = "red"), title(main = "Global Active Power", xlab = "Global Active Power (kilowatts")
hist(GlobalActivePower, col = "red", title(main = "Global Active Power", xlab = "Global Active Power (kilowatts"))
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts")
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts"))
hist(GlobalActivePower, col = "red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
hist(GlobalActivePower, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", break = 12)
hist(GlobalActivePower, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 12)
hist(GlobalActivePower, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
head(GlobalActivePower)
class(GlobalActivePower)
head(PowerDateSet)
d <- PowerDateSet[,3]
head(d)
class(d)
d <- as.numeric(d)
d
GlobalActivePower <- as.numeric(levels(PowerDateSet$Global_active_power))
GlobalActivePower <- as.numeric(levels(PowerDateSet$Global_active_power))[PowerDateSet$Global_active_power]
head(GlobalActivePower)
hist(GlobalActivePower, col = "red", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
hist(GlobalActivePower, col = "#FF0000", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
hist(GlobalActivePower, col = "#FF0000", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
hist(GlobalActivePower, col = "#FFB2B2", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
hist(GlobalActivePower, col = "#FF1919", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
hist(GlobalActivePower, col = "#FF3300", main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", breaks = 16)
?dev.copy
dev.copy(png, "figure1.png", height=1, width=1, units="in", res=480)
dev.copy(png, "figure1.png", height=1, width=1, res=480)
dev.copy(png, "figure1.png")
png("figure1.png", height=1, width=1, units="in", res=480)
dev.off()
plot(GlobalActivePower)
?line
?plot
plot(GlobalActivePower, type = "l")
days <- c(Thu, Fri, Sat)
days <- c("Thu", "Fri", "Sat")
plot(GlobalActivePower, days, type = "l")
plot(GlobalActivePower, type = "l", breaks = 3)
axis(1, days)
axis(1, lab = days)
axis(1, at=1.5, lab = days)
axis(3, at=1.5, lab = days)
axis(3, at=3, lab = days)
days
axis(3, at=3, lab = c("Thu", "Fri", "Sat"))
axis(1, at=1.5, lab = c("Thu", "Fri", "Sat"))
?axis
axis(1, labels = c("Thu", "Fri", "Sat"))
axis(1, at = 3, labels = c("Thu", "Fri", "Sat"))
axis(1, at = 1:3, labels = c("Thu", "Fri", "Sat"))
plot(GlobalActivePower, type = "l", axis(1, at = 1:3, labels = c("Thu", "Fri", "Sat")))
plot(GlobalActivePower, type = "l", xlab = NULL, ylab = "Global Acive Power (kilowatts)")
plot(GlobalActivePower, type = "l", xlab = "", ylab = "Global Acive Power (kilowatts)")
plot(GlobalActivePower, type = "l", xlab = "", ylab = "Global Acive Power (kilowatts)", xaxt = "n")
axis(1, at=1:3, labels = c("Thu", "Fri", "Sat"))
axis(1, at=10:100, labels = c("Thu", "Fri", "Sat"))
axis(1, at=c(1, 960. 1920), labels = c("Thu", "Fri", "Sat"))
axis(1, at=c(1, 960, 1920), labels = c("Thu", "Fri", "Sat"))
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
plot(GlobalActivePower, type = "l", xlab = "",
ylab = "Global Acive Power (kilowatts)", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
names(household_power_consuption)
head(PowerDateSet)
?holdon
sub1 <- PowerDateSet[, 7]
head(sub1)
GlobalActivePower2 <- as.numeric(PowerDateSet$Global_active_power)
GlobalActivePower2 <- as.numeric(levels(PowerDateSet$Global_active_power))[PowerDateSet$Global_active_power]
sub1 <- as.numeric(levels(PowerDateSet$Sub_metering_1))[PowerDateSet$Sub_metering_1]
head(sub1)
sub2 <- as.numeric(levels(PowerDateSet$Sub_metering_2))[PowerDateSet$Sub_metering_2]
sub3 <- as.numeric(levels(PowerDateSet$Sub_metering_3))[PowerDateSet$Sub_metering_3]
plot(sub1 +sub2 +sub3)
plot(sub1, type = "l")
plot(sub1, sub2, sub3, type = "l")
?plot
plot(c(sub1, sub2, sub3), type = "l")
?plot
plot(sub1, type = "l")
lines(sub2, type = "l")
lines(sub3, type = "l")
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
?pch
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), lty = c(1, 1, 1), lwd = c(2.5, 2.5), col = c('black', 'red', 'blue'))
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'), col = c('black', 'red', 'blue'))
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
?legend
legend("topright", inset = 1, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
legend("topright", inset = 6, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
legend("topright", inset = 200, c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.75)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
?mfr
par(mfcol = c(2, 2)
)
plot(GlobalActivePower, type = "l", xlab = "",
ylab = "Global Acive Power (kilowatts)", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
plot(GlobalActivePower, type = "l", xlab = "",
ylab = "Global Acive Power (kilowatts)", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
par(mfrow=1)
?par
plot
plot(x)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
par(mfrow=c(1,1))
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'))
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.75)
plot(sub1, type = "l", xlab = "", ylab = "Energy sub metering", xaxt = "n")
axis(1, at=c(1, 1440, 2880), labels = c("Thu", "Fri", "Sat"))
lines(sub2, type = "l", col = "red")
lines(sub3, type = "l", col = "blue" )
legend("topright", c('Sub_metering_1', 'Sub_metering_2', 'Sub_metering_3'),
lty = c(1, 1, 1), lwd = c(1, 1), col = c('black', 'red', 'blue'), cex = 0.5)
head(df)
rm(list=ls())
testdata <- read.table("./body_acc_x_test.txt")
testdata <- read.table("./UCI HAR Dataset/test/Inertial Signals/body_acc_x_test.txt")
head(testdata)
rm=(list=ls())
rm(list=ls())
getwd()
for (file in file_list){
setwd("UCI HAR Dataset//test//Inertial Signals/")
}
setwd("UCI HAR Dataset//test//Inertial Signals/")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
head(dataset)
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
rm(list=ls()
)
lf = list.files(path = "~/Desktop/RCoursera/UCI HAR Dataset/test/Inertial Signals/", pattern = "Data.txt",
full.names = TRUE, recursive = TRUE, include.dirs = TRUE)
library(plyr)
DateTime = ldply(lf, read.table, sep = "\t")
datafr = do.call("rbind", datalist)
setwd("UCI HAR Dataset//test//Inertial Signals/")
filelist = list.files(pattern = ".*.txt")
#assuming tab separated values with a header
datalist = lapply(filelist, function(x)read.table(x, header=T))
#assuming the same header/columns for all files
datafr = do.call("rbind", datalist)
